[{"/home/uddeshya/re-formers/src/index.js":"1","/home/uddeshya/re-formers/src/Components/App/App.js":"2","/home/uddeshya/re-formers/src/Utililty/CookieManager.js":"3","/home/uddeshya/re-formers/src/Utililty/MessageHandler.js":"4","/home/uddeshya/re-formers/src/Components/AppBar/AppBar.js":"5","/home/uddeshya/re-formers/src/Components/Notification/Notification.js":"6","/home/uddeshya/re-formers/src/Components/LogoCircle/LogoCircle.js":"7","/home/uddeshya/re-formers/src/Components/NewElementForm/NewElementForm.js":"8","/home/uddeshya/re-formers/src/Components/FormComponent/FormComponent.js":"9","/home/uddeshya/re-formers/src/Components/EditElementDialog/EditElementDialog.js":"10"},{"size":289,"mtime":1612718397186,"results":"11","hashOfConfig":"12"},{"size":7011,"mtime":1613039018337,"results":"13","hashOfConfig":"12"},{"size":537,"mtime":1612338216710,"results":"14","hashOfConfig":"12"},{"size":2523,"mtime":1613039023833,"results":"15","hashOfConfig":"12"},{"size":630,"mtime":1612720424097,"results":"16","hashOfConfig":"12"},{"size":2831,"mtime":1612985807372,"results":"17","hashOfConfig":"12"},{"size":1260,"mtime":1612717280352,"results":"18","hashOfConfig":"12"},{"size":2959,"mtime":1612938215966,"results":"19","hashOfConfig":"12"},{"size":6250,"mtime":1612985154474,"results":"20","hashOfConfig":"12"},{"size":3704,"mtime":1612982644186,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"j4c66t",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"/home/uddeshya/re-formers/src/index.js",[],["45","46"],"/home/uddeshya/re-formers/src/Components/App/App.js",[],"/home/uddeshya/re-formers/src/Utililty/CookieManager.js",[],"/home/uddeshya/re-formers/src/Utililty/MessageHandler.js",["47"],"/home/uddeshya/re-formers/src/Components/AppBar/AppBar.js",[],"/home/uddeshya/re-formers/src/Components/Notification/Notification.js",[],"/home/uddeshya/re-formers/src/Components/LogoCircle/LogoCircle.js",[],"/home/uddeshya/re-formers/src/Components/NewElementForm/NewElementForm.js",[],"/home/uddeshya/re-formers/src/Components/FormComponent/FormComponent.js",["48","49"],"import React from 'react';\nimport { Card, CardContent, Typography,Accordion, AccordionActions, Box, AccordionDetails, AccordionSummary, Avatar, Divider, Button, CardActions, CircularProgress, Snackbar } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport EditElementDialog from '../EditElementDialog/EditElementDialog'\nimport { TrendingUpOutlined } from '@material-ui/icons';\nconst { requestEditLock } = require('../../Utililty/MessageHandler')\nconst { hasCookie } = require('../../Utililty/CookieManager')\n\nconst styledTheme = {\n  root: {\n    width: '100%',\n  },\n  title: {\n    flexBasis: '30.00%',\n  },\n  question: {\n    flexBasis: '70.00%',\n    marginTop:'5px',\n  },\n  details: {\n    alignItems: 'center'\n  },\n  buttonProgress: {\n    color: 'green',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  }\n}\n\nclass FormComponent extends React.Component {\n  state = {\n    small: true,\n    loading: false,\n    openEdit: false,\n    showDecline: false,\n    showError: false,\n    deleting: false,\n  }\n  componentDidMount() {\n    if (window.innerWidth > 600) {\n      this.setState({\n        small: false\n      })\n    }\n  }\n  closeDialog = () => {\n    this.setState({\n      openEdit: false\n    })\n  }\n  editFlow = async (event) => {\n    console.log(this.props.itemData.id, 'edit')\n    let token = hasCookie().entryToken || '-1'\n    var lockResponse\n    if (token !== '-1') {\n      this.setState({loading: true})\n      lockResponse = await requestEditLock(token, this.props.itemData.id)\n    }\n    this.setState({loading: false})\n    let lockData = lockResponse.data\n    if (lockData['message'] === 'declined') {\n      console.log(\"you have been denied\")\n      this.setState({\n        showError: true\n      }, () => {\n        setTimeout(() => {\n          this.setState({\n            showError: false\n          });\n        }, 3000);\n      })\n    } else {\n      this.setState({openEdit: true})\n    }\n  }\n  deleteFlow = () => {\n    let obj = hasCookie().entryToken\n    this.setState({\n      deleting: true\n    })\n    console.log(\"Sent command to delete\")\n    this.props.socket.send(JSON.stringify({\n      entryToken: obj,\n      messageType: 'delete element',\n      formId: this.props.itemData.id\n    }))\n    this.setState({\n      deleting: false\n    })\n  \n  }\n  render() {\n    const userColorParsed = (this.props.itemData.Versions && this.props.itemData.Versions[0].EditedBy.colour) || 'black'\n    const userNameParsed = (this.props.itemData.Versions && this.props.itemData.Versions[0].EditedBy.userName) || 'Jane Doe'\n    const createdAt = new Date(this.props.itemData.CreatedAt).toLocaleDateString()\n    const isStatic = (this.props.itemData.id === -99)\n    const disableButton = this.state.loading || this.state.openEdit || this.state.showError || this.state.deleting || isStatic || this.props.itemData.IsDeleted\n    return (\n      <div>\n        <EditElementDialog \n          open={this.state.openEdit}\n          closeDialog={this.closeDialog}\n          currItem={this.props.itemData}\n          ws={this.props.socket}\n          currColor={this.props.currColor}\n          currName={this.props.currName}\n        />\n        {this.state.small && <Card style={{ minWidth: '275' }} variant=\"outlined\">\n          <CardContent>\n            <Typography style={{ fontSize: \"14px\", color: userColorParsed }} gutterBottom>\n              Created By: {userNameParsed}\n            </Typography>\n            <Typography variant=\"h5\" component=\"p\">\n              {this.props.itemData.title}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\n              {this.props.itemData.question}\n            </Typography>\n          </CardContent>\n          <Divider />\n          {this.state.showError && <Typography>You cannot edit this element right now</Typography>}\n          <Divider />\n          <CardActions style={{justifyContent:'center'}}>\n            <Button size=\"small\" onClick={this.editFlow} disabled={disableButton}> \n              Edit {this.state.loading && <CircularProgress size={24} style={styledTheme.buttonProgress}/> } \n            </Button>\n            <Button size=\"small\" color=\"secondary\" onClick={this.deleteFlow} disabled={disableButton}> Delete </Button>\n          </CardActions>\n        </Card>}\n        {!this.state.small && <Box style={styledTheme.root} border={this.props.itemData.IsDeleted && 2} borderColor={this.props.itemData.IsDeleted && 'red'}>\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1c-content\"\n              id=\"panel1c-header\"\n              >\n              <div style={styledTheme.title}>\n                <Typography variant=\"h5\">{this.props.itemData.title}</Typography>\n              </div>\n\n              <div style={styledTheme.question}>\n                <Typography color=\"textSecondary\">{this.props.itemData.question}</Typography>\n              </div>\n              <div>\n                <Avatar style={{backgroundColor:userColorParsed, marginLeft: '5px'}} variant=\"square\" size={20} alt={userNameParsed}>\n                  {userNameParsed.substring(0,2)}\n                </Avatar>\n              </div>\n              </AccordionSummary>\n              <AccordionDetails style={styledTheme.details}>\n                <div style={styledTheme.title} />\n                <div style={styledTheme.question}>\n                  <Typography> Element Created on {createdAt}</Typography>\n                </div>\n              </AccordionDetails>\n              <Divider />\n              {this.state.showError && <Typography>You cannot edit this element right now</Typography>}\n              <Divider />\n              <AccordionActions>\n                <Button size=\"small\" onClick={this.editFlow} disabled={disableButton}> \n                  Edit {this.state.loading && <CircularProgress size={24} style={styledTheme.buttonProgress}/> } \n                </Button>\n                <Button size=\"small\" color=\"secondary\" onClick={this.deleteFlow} disabled={disableButton}> Delete </Button>\n              </AccordionActions>\n          </Accordion>\n        </Box>}\n      </div>\n    )\n  }\n}\n\nexport default FormComponent;\n","/home/uddeshya/re-formers/src/Components/EditElementDialog/EditElementDialog.js",["50"],"import React from 'react';\nimport { Dialog, TextField, DialogActions, DialogContent, DialogContentText, DialogTitle, Avatar, Button, Typography, Badge } from '@material-ui/core'\nconst { hasCookie } = require('../../Utililty/CookieManager')\nconst { sendUnlockMessage } = require('../../Utililty/MessageHandler')\n \nclass EditElementDialog extends React.Component {\n  state = {\n    ws: null,\n    newQuestion: '',\n    newTitle: '',\n  }\n  componentDidMount() {\n    this.setState({\n      ws: this.props.ws,\n      newQuestion: this.props.currItem.question,\n      newTitle: this.props.currItem.title,\n    })\n  }\n\n  handleClose = () => {\n    let token = hasCookie().entryToken\n    sendUnlockMessage(token, this.props.currItem.id)\n    this.props.closeDialog()\n  }\n  handleSubmit = () => {\n    let obj = hasCookie()\n    this.state.ws.send(JSON.stringify({\n      entryToken: obj.entryToken,\n      messageType: 'edit',\n      question: this.state.newQuestion,\n      title: this.state.newTitle,\n      formId: this.props.currItem.id\n    }))\n    this.setState({\n      newQuestion: '',\n      newTitle: '',\n    })\n    this.props.closeDialog()\n  }\n  titleChangeHandler = (event) => {\n    this.setState({newTitle: event.target.value});\n  }\n  questionChangeHandler = (event) => {\n    this.setState({newQuestion: event.target.value});\n  }\n  render() {\n    \n    const len = (this.props.currItem.Versions != null) ? this.props.currItem.Versions.length : 0\n    // console.log(\"in len\", (len > 0) ? this.state.versionState[len-1]['EditedBy'] : 'meh')\n    const lastEditUser = (len > 0) ? this.props.currItem.Versions[len-1]['EditedBy']['userName'] : 'Jane Doe'\n    const lastEditColor = (len > 0) ? this.props.currItem.Versions[len-1]['EditedBy']['colour'] : 'yellow'\n    const lastEdited = (\n      <div style={{display:'flex'}}>\n        <Typography>Last Edited by <font style={{color: lastEditColor}}>{lastEditUser}</font></Typography>\n      </div>\n    )\n    return (\n      <Dialog open={this.props.open} onClose={this.props.handleClose}> \n        <DialogTitle id=\"form-dialog-title\">\n          <div style={{display: 'flex'}}>\n            <div style={{flex: 1}}>\n              Edit Question\n            </div>\n            <Avatar style={{backgroundColor:this.props.currColor, marginLeft: '5px'}} alt={this.props.currName}>\n              {this.props.currName && this.props.currName.substring(0,2)}\n            </Avatar>\n          </div>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n              Please edit the question and/or title as you wish\n          </DialogContentText>\n          {lastEdited}\n          <TextField \n            autoFocus\n            margin=\"dense\"\n            id=\"standard-required-title\"\n            color=\"secondary\"\n            label=\"Title\"\n            type=\"text\"\n            onChange={this.titleChangeHandler}\n            defaultValue={this.props.currItem.title}\n            fullWidth\n          />\n          <TextField \n            margin=\"dense\"\n            id=\"standard-required\"\n            label=\"Question\"\n            color=\"secondary\"\n            type=\"text\"\n            defaultValue={this.props.currItem.question}\n            onChange={this.questionChangeHandler}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleSubmit} variant=\"outlined\" disabled={this.state.newQuestion === this.props.currItem.question && this.state.newTitle === this.props.currItem.title}>\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n}\n\nexport default EditElementDialog",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":42,"column":9,"nodeType":"57","messageId":"58","endLine":42,"endColumn":13},{"ruleId":"55","severity":1,"message":"59","line":2,"column":166,"nodeType":"57","messageId":"58","endLine":2,"endColumn":174},{"ruleId":"55","severity":1,"message":"60","line":5,"column":10,"nodeType":"57","messageId":"58","endLine":5,"endColumn":28},{"ruleId":"55","severity":1,"message":"61","line":2,"column":119,"nodeType":"57","messageId":"58","endLine":2,"endColumn":124},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'resp' is assigned a value but never used.","Identifier","unusedVar","'Snackbar' is defined but never used.","'TrendingUpOutlined' is defined but never used.","'Badge' is defined but never used.","no-global-assign","no-unsafe-negation"]